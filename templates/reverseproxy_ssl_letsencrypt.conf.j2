################################################################################
# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!
################################################################################

upstream {{ item.key }}_backend  {
{% for upstream in item.value.upstreams %}
    server {{upstream.backend_address}}:{{upstream.backend_port}};
{% endfor %}
}

server {
   listen         80;
   listen    [::]:80;
   server_name    {{ item.value.domains | join(' ') }};
   location / {
   return         301 https://$server_name$request_uri;
   }

   location /.well-known {
      alias {{ nginx_document_root }}/{{ item.key }}/.well-known;
   }

   access_log /var/log/nginx/{{ item.key }}_access.log;
   error_log /var/log/nginx/{{ item.key }}_error.log error;

}

server {
   listen        443 ssl http2;
   listen   [::]:443 ssl http2;
   server_name {{ item.value.domains | join(' ') }};

{% if item.value.hsts_max_age is defined %}
   add_header Strict-Transport-Security "max-age={{ item.value.hsts_max_age }}; includeSubDomains; preload" always;
{% endif %}

   access_log /var/log/nginx/{{ item.key }}_access.log;
   error_log /var/log/nginx/{{ item.key }}_error.log error;

   ssl on;
   ssl_dhparam /etc/ssl/dhparam-4096.pem;
   ssl_certificate {{ letsencrypt_conf_path }}/live/{{ item.key }}/fullchain.pem;
   ssl_certificate_key {{ letsencrypt_conf_path }}/live/{{ item.key }}/privkey.pem;
   ssl_session_timeout 5m;
   #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_protocols TLSv1.1 TLSv1.2;
   #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
   ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384';
   ssl_prefer_server_ciphers on;
   ssl_session_cache shared:SSL:10m;
   ssl_session_tickets off; # Requires nginx >= 1.5.9
   ssl_stapling on; # Requires nginx >= 1.3.7
   ssl_stapling_verify on; # Requires nginx => 1.3.7
   resolver 1.1.1.1 8.8.8.8 valid=300s;
   resolver_timeout 5s; 

{% if item.value.client_certificate.verify is defined %}
   ssl_client_certificate {{ item.value.client_certificate.truststore }};
   ssl_verify_client {{ item.value.client_certificate.verify }};

   ssl_verify_depth {{ item.value.client_certificate.verify_depth }};
{% endif %}

   add_header X-Frame-Options DENY;
   add_header X-Content-Type-Options nosniff;
   add_header X-XSS-Protection "1; mode=block";

   location /.well-known {
      alias {{ nginx_document_root }}/{{ item.key }}/.well-known;
   }

   location / {
      gzip off;
      proxy_set_header X-Forwarded-Ssl on;
      client_max_body_size {{ item.value.client_max_body_size | default('50M') }};
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Frame-Options SAMEORIGIN;
{% if item.value.client_certificate.pass is true %}
      proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
{% endif %}
      proxy_pass http://{{ item.key }}_backend;
   }
}
